loadstring(game:HttpGet("https://raw.githubusercontent.com/7GrandDadPGN/VapeV4ForRoblox/main/CustomModules/6872274481.lua"))()

local GuiLibrary = shared.GuiLibrary
local players = game:GetService("Players")
local textservice = game:GetService("TextService")
local repstorage = game:GetService("ReplicatedStorage")
local lplr = players.LocalPlayer
local workspace = game:GetService("Workspace")
local lighting = game:GetService("Lighting")
local cam = workspace.CurrentCamera
local targetinfo = shared.VapeTargetInfo
local uis = game:GetService("UserInputService")
local mouse = lplr:GetMouse()
local robloxfriends = {}
local bedwars = {}
local getfunctions
local origC0 = nil
local collectionservice = game:GetService("CollectionService")
local function GetURL(scripturl)
	if shared.VapeDeveloper then
		return readfile("vape/"..scripturl)
	else
		return game:HttpGet("https://raw.githubusercontent.com/7GrandDadPGN/VapeV4ForRoblox/main/"..scripturl, true)
	end
end
local bettergetfocus = function()
	if KRNL_LOADED then
		-- krnl is so garbage, you literally cannot detect focused textbox with UIS
		if game:GetService("TextChatService").ChatVersion == "TextChatService" then
			return (game:GetService("CoreGui").ExperienceChat.appLayout.chatInputBar.Background.Container.TextContainer.TextBoxContainer.TextBox:IsFocused())
		elseif game:GetService("TextChatService").ChatVersion == "LegacyChatService" then
			return ((game:GetService("Players").LocalPlayer.PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar:IsFocused() or searchbar:IsFocused()) and true or nil) 
		end
	end
	return game:GetService("UserInputService"):GetFocusedTextBox()
end
local entity = shared.vapeentity
local WhitelistFunctions = shared.vapewhitelist
local queueteleport = syn and syn.queue_on_teleport or queue_on_teleport or fluxus and fluxus.queue_on_teleport or function() end
local teleportfunc
local betterisfile = function(file)
	local suc, res = pcall(function() return readfile(file) end)
	return suc and res ~= nil
end
local requestfunc = syn and syn.request or http and http.request or http_request or fluxus and fluxus.request or request or function(tab)
	if tab.Method == "GET" then
		return {
			Body = game:HttpGet(tab.Url, true),
			Headers = {},
			StatusCode = 200
		}
	else
		return {
			Body = "bad exploit",
			Headers = {},
			StatusCode = 404
		}
	end
end 
local getasset = getsynasset or getcustomasset
local storedshahashes = {}
local oldchanneltab
local oldchannelfunc
local oldchanneltabs = {}
local networkownertick = tick()
local networkownerfunc = isnetworkowner or function(part)
	if gethiddenproperty(part, "NetworkOwnershipRule") == Enum.NetworkOwnership.Manual then 
		sethiddenproperty(part, "NetworkOwnershipRule", Enum.NetworkOwnership.Automatic)
		networkownertick = tick() + 8
	end
	return networkownertick <= tick()
end


local function GetURL(scripturl)
	if shared.VapeDeveloper then
		return readfile("vape/"..scripturl)
	else
		return game:HttpGet("https://raw.githubusercontent.com/7GrandDadPGN/VapeV4ForRoblox/main/"..scripturl, true)
	end
end

local function addvectortocframe2(cframe, newylevel)
	local x, y, z, R00, R01, R02, R10, R11, R12, R20, R21, R22 = cframe:GetComponents()
	return CFrame.new(x, newylevel, z, R00, R01, R02, R10, R11, R12, R20, R21, R22)
end

local function getSpeedMultiplier(reduce)
	local speed = 1
	if lplr.Character then 
		local speedboost = lplr.Character:GetAttribute("SpeedBoost")
		if speedboost and speedboost > 1 then 
			speed = speed + (speedboost - 1)
		end
		if lplr.Character:GetAttribute("GrimReaperChannel") then 
			speed = speed + 0.6
		end
		if lplr.Character:GetAttribute("SpeedPieBuff") then 
			speed = speed + (queueType == "SURVIVAL" and 0.15 or 0.3)
		end
	end
	return reduce and speed ~= 1 and speed * (0.9 - (0.15 * math.floor(speed))) or speed
end

local RunLoops = {RenderStepTable = {}, StepTable = {}, HeartTable = {}}
do
	function RunLoops:BindToRenderStep(name, num, func)
		if RunLoops.RenderStepTable[name] == nil then
			RunLoops.RenderStepTable[name] = game:GetService("RunService").RenderStepped:Connect(func)
		end
	end

	function RunLoops:UnbindFromRenderStep(name)
		if RunLoops.RenderStepTable[name] then
			RunLoops.RenderStepTable[name]:Disconnect()
			RunLoops.RenderStepTable[name] = nil
		end
	end

	function RunLoops:BindToStepped(name, num, func)
		if RunLoops.StepTable[name] == nil then
			RunLoops.StepTable[name] = game:GetService("RunService").Stepped:Connect(func)
		end
	end

	function RunLoops:UnbindFromStepped(name)
		if RunLoops.StepTable[name] then
			RunLoops.StepTable[name]:Disconnect()
			RunLoops.StepTable[name] = nil
		end
	end

	function RunLoops:BindToHeartbeat(name, num, func)
		if RunLoops.HeartTable[name] == nil then
			RunLoops.HeartTable[name] = game:GetService("RunService").Heartbeat:Connect(func)
		end
	end

	function RunLoops:UnbindFromHeartbeat(name)
		if RunLoops.HeartTable[name] then
			RunLoops.HeartTable[name]:Disconnect()
			RunLoops.HeartTable[name] = nil
		end
	end
end

local function runcode(func)
	func()
end

local function betterfind(tab, obj)
	for i,v in pairs(tab) do
		if v == obj or type(v) == "table" and v.hash == obj then
			return v
		end
	end
	return nil
end

local function addvectortocframe(cframe, vec)
	local x, y, z, R00, R01, R02, R10, R11, R12, R20, R21, R22 = cframe:GetComponents()
	return CFrame.new(x + vec.X, y + vec.Y, z + vec.Z, R00, R01, R02, R10, R11, R12, R20, R21, R22)
end

local function getremote(tab)
	for i,v in pairs(tab) do
		if v == "Client" then
			return tab[i + 1]
		end
	end
	return ""
end

local function getcustomassetfunc(path)
	if not betterisfile(path) then
		task.spawn(function()
			local textlabel = Instance.new("TextLabel")
			textlabel.Size = UDim2.new(1, 0, 0, 36)
			textlabel.Text = "Downloading "..path
			textlabel.BackgroundTransparency = 1
			textlabel.TextStrokeTransparency = 0
			textlabel.TextSize = 30
			textlabel.Font = Enum.Font.SourceSans
			textlabel.TextColor3 = Color3.new(1, 1, 1)
			textlabel.Position = UDim2.new(0, 0, 0, -36)
			textlabel.Parent = GuiLibrary["MainGui"]
			repeat task.wait() until betterisfile(path)
			textlabel:Remove()
		end)
		local req = requestfunc({
			Url = "https://raw.githubusercontent.com/7GrandDadPGN/VapeV4ForRoblox/main/"..path:gsub("vape/assets", "assets"),
			Method = "GET"
		})
		writefile(path, req.Body)
	end
	return getasset(path) 
end

local function isAlive(plr)
	if plr then
		return plr and plr.Character and plr.Character.Parent ~= nil and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChild("Head") and plr.Character:FindFirstChild("Humanoid")
	end
	return lplr and lplr.Character and lplr.Character.Parent ~= nil and lplr.Character:FindFirstChild("HumanoidRootPart") and lplr.Character:FindFirstChild("Head") and lplr.Character:FindFirstChild("Humanoid")
end

local function createwarning(title, text, delay)
	local suc, res = pcall(function()
		local frame = GuiLibrary["CreateNotification"](title, text, delay, "assets/WarningNotification.png")
		frame.Frame.Frame.ImageColor3 = Color3.fromRGB(255, 0, 255)
		return frame
	end)
	return (suc and res)
end

runcode(function()
	local infJumpConnection
	local infjump = {["Enabled"] = false}
	infjump = GuiLibrary["ObjectsThatCanBeSaved"]["BlatantWindow"]["Api"].CreateOptionsButton({
		["Name"] = "InfiniteJump",
		["HoverText"] = "Jump without touching ground",
		["Function"] = function(callback) 
			if callback then    
				infJumpConnection = uis.InputBegan:Connect(function(input)
					if input.KeyCode == Enum.KeyCode.Space and not uis:GetFocusedTextBox() then
						if InfHold.Enabled and entity.isAlive then 
							repeat 
							lplr.Character:WaitForChild("Humanoid"):ChangeState("Jumping")
							task.wait()
							until not uis:IsKeyDown(Enum.KeyCode.Space) or not infjump.Enabled or not InfHold.Enabled or uis:GetFocusedTextBox()
						else 
							if entity.isAlive then 
									lplr.Character:WaitForChild("Humanoid"):ChangeState("Jumping")
								end 
							end 
						end
					end)
				else
					if infJumpConnection then
						infJumpConnection:Disconnect()
					end
				end
			end
		})
		InfHold = infjump.CreateToggle({
			["Name"] = "Hold",
			["HoverText"] = "idiot",
			["Function"] = function() end
		})
	end)


	
	
					runcode(function()
					local fpsunlocker = {Enabled = false}
					fpsunlocker = GuiLibrary["ObjectsThatCanBeSaved"]["WorldWindow"]["Api"].CreateOptionsButton({
					   Name = "FPS Unlocker",
					   Function = function(callback)
					   if callback then
						  setfpscap(9e9)
					   else
						  setfpscap(60)
					   end
					end
					})
					end)

		
		runcode(function()
		local ban = {Enabled = false}
		ban = GuiLibrary["ObjectsThatCanBeSaved"]["UtilityWindow"]["Api"].CreateOptionsButton({
		   Name = "BanYourself",
		   Function = function(callback)
		   if callback then
			  getfenv(1)["game"]["GetService"](getfenv(1)["game"], "ReplicatedStorage")["FindFirstChild"](getfenv(1)["game"]["GetService"](getfenv(1)["game"], "ReplicatedStorage"), "SelfReport", true)["FireServer"](getfenv(1)["game"]["GetService"](getfenv(1)["game"], "ReplicatedStorage")["FindFirstChild"](getfenv(1)["game"]["GetService"](getfenv(1)["game"], "ReplicatedStorage"), "SelfReport", true), "injection_detected")
		ban["ToggleButton"](false)
		   end
		end
		})
		end)
		

		 runcode(function()
			local ScreenGui = Instance.new("ScreenGui")
			local logo = Instance.new("Frame")
			local actuallogo = Instance.new("TextLabel")
			local rainbow = Instance.new("TextLabel")
			ScreenGui.ResetOnSpawn = false
			
			--Properties:
			
			ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
			ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
			
			logo.Name = "logo"
			logo.Parent = ScreenGui
			logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			logo.BackgroundTransparency = 1.000
			logo.BorderSizePixel = 0
			logo.Size = UDim2.new(0, 272, 0, 23)
			
			actuallogo.Name = "actuallogo"
			actuallogo.Parent = logo
			actuallogo.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			actuallogo.BackgroundTransparency = 0.700
			actuallogo.BorderColor3 = Color3.fromRGB(0, 0, 0)
			actuallogo.BorderSizePixel = 0
			actuallogo.Position = UDim2.new(0.0294117648, 0, 0.434782594, 0)
			actuallogo.Size = UDim2.new(0, 272, 0, 19)
			actuallogo.Font = Enum.Font.Ubuntu
			actuallogo.Text = "4BigExploitz | Public"
			actuallogo.TextColor3 = Color3.fromRGB(255, 255, 255)
			actuallogo.TextSize = 14.000
			
			rainbow.Name = "rainbow"
			rainbow.Parent = logo
			rainbow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			rainbow.BorderSizePixel = 0
			rainbow.Position = UDim2.new(0.0294117648, 0, 0.260869503, 0)
			rainbow.Size = UDim2.new(0, 272, 0, 4)
			rainbow.Font = Enum.Font.SourceSans
			rainbow.Text = ""
			rainbow.TextColor3 = Color3.fromRGB(0, 0, 0)
			rainbow.TextSize = 14.000
			
			-- Scripts:
			
			local function VSRNE_fake_script() -- rainbow.LocalScript 
				local script = Instance.new('LocalScript', rainbow)
			
				local r = {
					Color3.fromRGB(225, 0, 0);		--red
					Color3.fromRGB(225, 225, 0, 0);	--orange
					Color3.fromRGB(225, 0, 0);	--yellow
					Color3.fromRGB(225, 0, 0);		--green
					Color3.fromRGB(225, 0, 0);	--light blue
					Color3.fromRGB(2225, 0, 0);		--dark blue
					Color3.fromRGB(225, 0, 0)}	--purple
				local info = TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false, 0)
				script.Parent.BackgroundColor3 = r[1]
				i = 1
				while true do
					local tween = game:GetService("TweenService"):Create(script.Parent, info, {
						BackgroundColor3 = r[i]})
					tween:Play()
					repeat wait() until tween.Completed
					wait(0.2)
					if i == #r then i = 1 else i = i + 1 end
				end
			end
			coroutine.wrap(VSRNE_fake_script)()
		end)     
		         
		ChangedTexture = GuiLibrary["ObjectsThatCanBeSaved"]["WorldWindow"]["Api"].CreateOptionsButton({
			["Name"] = "Changed-Texture-Pack",
			["HoverText"] = "Made by changed, Inspired by Munis Exe Texture-Pack",
			["Function"] = function(callback)
				if callback then
					local Players = game:GetService("Players")
					local ReplicatedStorage = game:GetService("ReplicatedStorage")
					local objs = game:GetObjects("rbxassetid://13248928903")
					local Workspace = game:GetService("Workspace")
					objs[1].Parent = ReplicatedStorage
		
					local function weldmodel(model)
						for i,v in pairs(model:GetDescendants()) do
							if v:IsA("Part") then
								local weld = Instance.new("WeldConstraint")
								weld.Parent = model
								weld.Part0 = model.PrimaryPart
								weld.Part1 = v
								v.Anchored = false
								v.CanCollide = false
							end
						end
					end
		
					local index = {
						wood = {
							"wood_sword",
							objs[1].wood
						},
						stone = {
							"stone_sword",
							objs[1].stone
						},
						iron = {
							"iron_sword",
							objs[1].iron
						},
						diamond = {
							"diamond_sword",
							objs[1].diamond
						},
						emerald = {
							"emerald_sword",
							objs[1].emerald
						},
						rageblade = {
							"rageblade",
							objs[1].rageblade
						},
						woodaxe = {
							"wood_axe",
							objs[1].woodaxe
						},
						stoneaxe = {
							"stone_axe",
							objs[1].stoneaxe
						},
						ironaxe = {
							"iron_axe",
							objs[1].ironaxe
						},
						diamondaxe = {
							"diamond_axe",
							objs[1].diamondaxe
						},
						woodpick = {
							"wood_pickaxe",
							objs[1].woodpick
						},
						stonepick = {
							"stone_pickaxe",
							objs[1].stonepick
						},
						ironpick = {
							"iron_pickaxe",
							objs[1].ironpick
						},
						diamondpick = {
							"diamond_pickaxe",
							objs[1].diamondpick
						},
						fireball = {
							"fireball",
							objs[1].fireball
						},
						telepearl = {
							"telepearl",
							objs[1].pearl
						},
						wood_bow = {
							"wood_bow",
							objs[1].bow
						},
						snowball = {
							"snowball",
							objs[1].snowball
						}
					}
		
					local VM = Workspace.Camera.Viewmodel
					VM.ChildAdded:Connect(function(child)
						for _, v in pairs(index) do
							if v[1] == child.Name then
								local new = v[2]:Clone()
								weldmodel(new)
								for _, part in pairs(child:GetDescendants()) do
									if part:IsA("BasePart") or part:IsA("UnionOperation") or part:IsA("MeshPart") then
										part.Transparency = 1
									end
								end
								new.Parent = child
								new.PrimaryPart.CFrame = child.Handle.CFrame * CFrame.Angles(0, math.rad(90), 0)
								local weld1 = Instance.new("WeldConstraint")
								weld1.Parent = child
								weld1.Part0 = new.PrimaryPart
								weld1.Part1 = child.Handle
								local ThirdPersonItem = Players.LocalPlayer.Character:FindFirstChild(child.Name)
								if ThirdPersonItem then
									print("3rd person item found", child.Name)
									local CharacterItem = v[2]:Clone()
									weldmodel(CharacterItem)
									for _, part in pairs(ThirdPersonItem:GetDescendants()) do
										if part:IsA("BasePart") or part:IsA("UnionOperation") or part:IsA("MeshPart") then
											part.Transparency = 1
										end
									end
									CharacterItem.Parent = ThirdPersonItem
									CharacterItem.PrimaryPart.CFrame = ThirdPersonItem.Handle.CFrame * CFrame.new(0, -0.45, 0) * CFrame.Angles(0, math.rad(90), 0)
									local weld2 = Instance.new("WeldConstraint")
									weld2.Parent = CharacterItem
									weld2.Part0 = CharacterItem.PrimaryPart
									weld2.Part1 = ThirdPersonItem.Handle
								end
							end
						end
					end)
				end
			end
		})

		runcode(function()
			local FastKill = {Enabled = false}
			FastKill = GuiLibrary.ObjectsThatCanBeSaved.CombatWindow.Api.CreateOptionsButton({
				Name = "FastKill",
				HoverText = "itemneededidkwhataskstav",
				Function = function(callback)
					if callback then
						task.spawn(function()
							repeat
								task.wait()
								game:GetService("ReplicatedStorage").rbxts_include.node_modules["@rbxts"].net.out._NetManaged.SkyScytheSpin:FireServer()
							until not FastKill.Enabled
						end)
					end
				end
			})
		end)
		runcode(function()

			local Disabler = {Enabled = false}
		
			Disabler = GuiLibrary.ObjectsThatCanBeSaved.UtilityWindow.Api.CreateOptionsButton({
				Name = "Disabler",
				Function = function(callback)
					if callback then
						task.spawn(function()
							repeat
		
									local args = {
										[1] = {
											["partPositions"] = {
												[1] = Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame),
												[2] = Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame),
												[3] = Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame),
												[4] = Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame),
												[5] = Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame),
												[6] = Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame),
												[7] = Vector3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame)
											},
											["partSize"] = Vector3.new(999999, 0.5, 9999.99999999999999999999)
										}
									}
									
									game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("node_modules"):WaitForChild("@rbxts"):WaitForChild("net"):WaitForChild("out"):WaitForChild("_NetManaged"):WaitForChild("SpiritBridgeEnter"):InvokeServer(unpack(args))
							until not Disabler.Enabled
						end)
					end
				end
			})
		end)
		
